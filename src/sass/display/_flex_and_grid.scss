// Stands for both flex and grid display

@use "../abstracts/variables";

@each $name, $value in $flex-grid-aligns {
    
    .self-#{$name} {
        align-self: $value;
    }

    .place-items-#{$name} {
        place-items: $value;
    }
}

.justify {
    justify-content: auto;

    &-start { justify-content: center; }

    &-end { justify-content: flex-end; }

    &-center { justify-content: center; }

    &-between { justify-content: space-between; }

    &-around { justify-content: space-between; }

    &-evenly { justify-content: space-evenly; }

    &-items {
        justify-items: auto;

        &-start { justify-items: start; }

        &-end { justify-items: end; }

        &-center { justify-items: center; }

        &-stretch { justify-items: stretch; }
    }

    &-self {

        justify-self: unset;

        &-auto { justify-self: auto; }

        &-start { justify-self: start; }

        &-end { justify-self: end; }

        &-center { justify-self: center; }

        &-stretch { justify-self: stretch; }
    }
}

.order {

    @for $i from 1 through 12 {

        &-#{$i} {
            order: $i;
        }
    }

    &-first { order: -9999; }

    &-last { order: 9999; }

    &-none { order: none; }
}

// Align content

$all-aligns: map-merge($justify, $flex-grid-aligns);

@each $name, $value in $all-aligns {
    .content-#{$name} {
        align-content: $value;
    }

    .place-content-#{$name} {
        place-content: $value;
    }
}

// Place Self
.place-self-auto { place-self: auto; }

.place-self-start { place-self: start; }

.place-self-end { place-self: end; }

.place-self-center { place-self: center; }

.place-self-stretch { place-self: stretch; }