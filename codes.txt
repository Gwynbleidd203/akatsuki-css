$base-font-size: 62.5%; // 1rem = 10px
$step: 0.25;
$max: 64;
$total-steps: ($max / $step) + 1;
$numbers: ();

@for $i from 1 through $total-steps {
  $number: $step * ($i - 1);
  $number-in-rem: $number / 4;
  $number-in-px: $number-in-rem * 10;
  $number-in-base-font-size: $number-in-px / 16 * 100 / $base-font-size;
  $numbers: append($numbers, $number-in-base-font-size);
}

// Define a function that generates width classes
@function width($values) {
    $classes: (); // Initialize an empty list to store the classes
  
    @each $key, $value in $values {
      $class-name: if($key == 'default', 'w', 'w-' + $key); // Set the class name
      $class-value: $value; // Set the class value
  
      // Handle percentage values
      @if unitless($value) {
        $class-value: percentage($value); // Convert the value to a percentage
      }
  
      // Add the class to the list
      $classes: append($classes, ('.' + $class-name): (width: $class-value));
    }
  
    @return $classes; // Return the list of classes
  }
  
  // Usage example
  $widths: (
    'default': 'auto',
    '1/2': '50%',
    '1/3': '33.33%',
    '2/3': '66.67%',
    '1/4': '25%',
    '3/4': '75%',
    '1/5': '20%',
    '2/5': '40%',
    '3/5': '60%',
    '4/5': '80%',
    'full': '100%',
    'screen': '100vw',
  );
  
  $classes: width($widths);
  
  @each $class, $props in $classes {
    #{$class} {
      width: $props['widths'];
    }
  }